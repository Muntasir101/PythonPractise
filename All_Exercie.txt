Exercise 1:
Create a program that asks the user to enter their name and their age.
Print out a message addressed to them that tells them the year that
they will turn 100 years old.
Note: for this exercise, the expectation is that you
explicitly write out the year (and therefore be out of date the next year).


Extras:

Add on to the previous program by asking the user
for another number and printing out that many copies of the previous message.
(Hint: order of operations exists in Python)
Print out that many copies of the previous message on separate lines.
(Hint: the string "\n is the same as pressing the ENTER button)

Exercise 2 :
The exercise comes first (with a few extras if you want the extra challenge or want to spend more time),
followed by a discussion. Enjoy!

Ask the user for a number.
Depending on whether the number is even or odd,
print out an appropriate message to the user.
Hint: how does an even / odd number react differently when divided by 2?

Extras:

If the number is a multiple of 4, print out a different message.
Ask the user for two numbers:
one number to check (call it num) and one number to divide by (check).
If check divides evenly into num, tell that to the user.
If not, print a different appropriate message.

Exercise 3 :
Take a list, say for example this one:

a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
and write a program that prints out all the elements of the list
that are less than 5.

Extras:

Instead of printing the elements one by one,
make a new list that has all the elements less than 5 from this list in it and
print out this new list.
Write this in one line of Python.
Ask the user for a number and
return a list that contains only elements from the original list a that
are smaller than that number given by the user.

Exercise 4 :
Create a program that asks the user for a number and t
hen prints out a list of all the divisors of that number.
(If you don’t know what a divisor is,
it is a number that divides evenly into another number.
For example, 13 is a divisor of 26 because 26 / 13 has no remainder.)

Exercise 5 :
Take two lists, say for example these two:

  a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
  b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
and write a program that returns a list that contains only the elements
that are common between the lists (without duplicates).
Make sure your program works on two lists of different sizes.

Extras:

Randomly generate two lists to test this
Write this in one line of Python

Exercise 6 :
Ask the user for a string and
print out whether this string is a palindrome or not.
(A palindrome is a string that reads the same forwards and backwards.)

Exercise 7 :
Let’s say I give you a list saved in a
variable: a = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100].
Write one line of Python that takes this list a and
makes a new list that has only the even elements of this list in it.

Exercise 8 :
Make a two-player Rock-Paper-Scissors game.
(Hint: Ask for player plays (using input),
compare them, print out a message of congratulations to the winner,
and ask if the players want to start a new game)

Remember the rules:

Rock beats scissors
Scissors beats paper
Paper beats rock

Exercise 9:
Generate a random number between 1 and 9 (including 1 and 9).
Ask the user to guess the number,
then tell them whether they guessed too low,
too high, or exactly right.

Extras:

Keep the game going until the user types “exit”
Keep track of how many guesses the user has taken,
and when the game ends, print this out.